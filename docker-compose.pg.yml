version: "3.4"

x-common-variables: &common-variables
  MYSQL_USER: sampleuser
  MYSQL_PASSWORD: samplepassword
  MYSQL_DATABASE: sampledb
  MYSQL_DATABASE: sampledb
  POSTGRES_PASSWORD: postgres
  MYSQL_PASSWORD: postgres
  FASTIFY_PORT: 8000
  CLIENT_PORT: 3000
  NODE_ENV: development
services:
  pg:
    image: postgres:14.1-alpine
    restart: always
    env_file:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - pgnetwork
    ports:
      - "5432:5432"
    volumes:
      - pgadmin-data:/var/lib/postgresql/data
      - ./db/pg_sample.sql:/docker-entrypoint-initdb.d/create_tables.sql
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    networks:
     - pg
    depends_on:
      - pgnetwork
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ghadad@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin    
  mysql:
    image: mysql:5.7
    environment:
      <<: *common-variables
      MYSQL_HOST: localhost
      MYSQL_ROOT_PASSWORD: root
    networks:
      - mysql
    #   ports:
    #     - 3307:3306
    restart: unless-stopped
    volumes:
      - ./db/sample.sql:/docker-entrypoint-initdb.d/sample.sql
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
    networks:
      - mysql
    ports:
      - 8080:80
    restart: always
  #nginx:
  # image: nginx:latest
  # container_name: nginx
  # ports:
  #   - "8000:80"
  #   - "443"
  #   volumes:
  #     - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default
  #     - ./docker/nginx/nginx.conf:/etc/nginx/sites-available/default
  # networks:
  #  - server
  #env_file: ./.env
  server:
    build: ./server
    depends_on:
      - mysql
    expose:
      - 8000
    environment:
      <<: *common-variables
      MYSQL_HOST_IP: mysql
    ports:
      - 8000:8000
    volumes:
      - ./server:/app
    networks:
      - mysql
      - pgnetwork
    entrypoint:
      - npm
      - run
      - dev
  client:
    build: ./client
    environment:
      <<: *common-variables
      NODE_PATH: src
    expose:
      - 3000
    user: "${UID}:${GID}"
    ports:
      - 3000:3000
    volumes:
      - ./client:/app/client
    networks:
      - server
    #command: npm run start
    entrypoint:
      - npm
      - run
      - dev
networks:
  mysql:
  server:
  pgnetwork:
volumes:
  pgadmin-data: {}
  db: {}
    