version: "3.4"

x-common-variables: &common-variables
  MYSQL_USER: sampleuser
  MYSQL_PASSWORD: samplepassword
  MYSQL_DATABASE: sampledb
  FASTIFY_PORT : 8000
  CLIENT_PORT: 3000
services:
  mysql:
    image: mysql:5.7
    environment:
      <<: *common-variables
      MYSQL_HOST: localhost
      MYSQL_ROOT_PASSWORD: root
    networks:
      - mysql
    ports:
      - 3397:3397
    restart: unless-stopped
    volumes:
      - ./db/sample.sql:/docker-entrypoint-initdb.d/sample.sql
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
    networks:
      - mysql
    ports:
      - 8080:80
    restart: always
  #nginx:
  # image: nginx:latest
  # container_name: nginx
  # ports:
  #   - "8000:80"
  #   - "443"
 #   volumes:
 #     - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default
 #     - ./docker/nginx/nginx.conf:/etc/nginx/sites-available/default
  # networks:
  #  - server
  #env_file: ./.env
  server:
    build: ./server
    depends_on:
      - mysql
    expose:
      - 8000
    user: "${UID}:${GID}"
    environment:
      <<: *common-variables
      MYSQL_HOST_IP: mysql
    ports:
      - 8000:8000
    volumes:
      - ./server:/app
    networks:
      - mysql
    entrypoint:
     - npm 
     - run 
     - dev
  client:
    build: ./client
    environment:
      <<: *common-variables
      NODE_PATH: src
    expose:
      - 3000
    user: "${UID}:${GID}"
    ports:
      - 3000:3000
    volumes:
      - ./client:/app
    networks:
      - server
    #command: npm run start
    entrypoint: 
     - npm
     - run
     - dev
networks:
  mysql:
  server:
